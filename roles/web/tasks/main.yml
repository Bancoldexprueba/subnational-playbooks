---
- name: install system packages
  apt: pkg={{item}} state=present
  with_items: system_packages

- name: create srv dir
  file: dest={{atlas_prefix}} owner={{atlas_webuser}} group={{atlas_webuser}} state=directory recurse=yes
- name: create log dir
  file: dest=/var/log/django/ owner={{atlas_webuser}} group={{atlas_webuser}} state=directory recurse=yes

- name: get backend code
  git: repo={{atlas_git_repo}}
       dest={{atlas_prefix}}
       version={{atlas_git_version}}
       accept_hostkey=true

- name: create a new venv
  shell: "pyvenv-3.4 --without-pip {{atlas_prefix}}/env/"

- name: install pip from get-pip into existing pyvenv
  shell: ". {{atlas_prefix}}/env/bin/activate; curl https://bootstrap.pypa.io/get-pip.py | python3"

- name: install atlas python requirements
  pip: requirements={{atlas_prefix}}/requirements.txt virtualenv={{atlas_prefix}}/env/ virtualenv_command=pyvenv-3.4

- name: install atlas python dev requirements
  pip: requirements={{atlas_prefix}}/requirements-dev.txt virtualenv={{atlas_prefix}}/env/ virtualenv_command=pyvenv-3.4

- name: get frontend code
  git: repo=git@github.com:cid-harvard/colombia-prototype.git
       dest=/srv/colombia-prototype
       version=spanish
       accept_hostkey=true

- name: install sass
  gem: name=sass
  tags: debug

- name: install bower
  npm: name=bower global=yes

- name: install gulp
  npm: name=gulp global=yes

- name: Install packages based on package.json.
  npm: path=/srv/colombia-prototype/

- name: Create bower dir
  file: path=/srv/colombia-prototype/bower_components/ state=directory owner={{atlas_webuser}}

- name: Install packages based on bower.json.
  shell: "cd /srv/colombia-prototype/; bower install /srv/colombia-prototype/bower.json"
  sudo: no

- name: gulp rebuild
  shell: "cd /srv/colombia-prototype/; gulp rebuild"

- name: Remove existing nginx config
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: copy in nginx site config file
  template: src=nginx.{{atlas_environment}} dest=/etc/nginx/sites-enabled/{{atlas_environment}}

- name: copy in nginx main config files
  template: src=nginx.conf.{{atlas_environment}} dest=/etc/nginx/nginx.conf

- name: copy in uwsgi config
  template: owner={{atlas_webuser}} src=atlas.uwsgi.ini dest=/etc/uwsgi/apps-enabled/atlas.ini

- name: copy in supervisor config
  template: owner={{atlas_webuser}} src=supervisor.atlas.conf dest=/etc/supervisor/conf.d/atlas.conf

- name: copy in database
  copy: owner={{atlas_webuser}} src=/Users/makmana/colombia/src/colombia/database.db dest={{atlas_prefix}}/src/colombia/

- name: reload nginx service
  service: name=nginx state=reloaded

- name: reload uwsgi
  supervisorctl: name=uwsgi state=restarted
